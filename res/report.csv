code,category_code,sub_category_code,image_code,title,description,info,is_hide
1,1,1,5,Rubyのeachメソッドで要素の番号を取得する方法,Rubyのeachメソッドは配列やハッシュの要素を順番に取り出すことができます。さらに、取り出す要素が何番目のものかを取得する方法を教えます。,"<p>まずは、eachメソッドの使い方を紹介します。</p><br /><pre><code>配列のデータ.each do |変数|<br />  処理内容<br />end<br /></code></pre><br /><p>配列の要素分の処理を繰り返すときに使用するメソッドです。</p><br /><br /><h3 class=""uk-heading-bullet"">サンプル</h3><br /><pre><code>seasons = [""Spring"", ""Summer"", ""Autumn"", ""Winter""]<br />seasons.each do |season|<br />  puts season<br />end<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">実行結果</h3><br /><pre><code>Spring<br />Summer<br />Autumn<br />Winter<br /></code></pre><br /><p>配列の要素を1つずつ取得することができます。しかし、この方法では何番目の要素かを判断することが出来ません。取り出す要素が何番目のものかを取得する場合は、each_with_indexメソッドを使いましょう。</p><br /><br /><p>each_with_indexメソッドの使い方を紹介します。</p><br /><pre><code>配列のデータ.each_with_index do |変数, インデックス|<br />  処理内容<br />end<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">サンプル</h3><br /><pre><code>seasons = [""Spring"", ""Summer"", ""Autumn"", ""Winter""]<br />seasons.each_with_index do |season, i|<br />  puts ""#{i} = #{season}""<br />end<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">実行結果</h3><br /><pre><code>0 = Spring<br />1 = Summer<br />2 = Autumn<br />3 = Winter<br /></code></pre><br /><br /><p>i には番号が入ります。インデックスは、0から始まる整数です。要素が増える毎に1ずつ増えていきます。each_with_indexメソッドは、ランキングの表示や奇数偶数の判断でCSSの変更など使い道は色々あります。</p><br /><p>each_with_indexメソッドの初期値は0から始まりますが、その初期値を変更することも可能です。その場合は、each.with_indexメソッドを使います。eachとwithの間に「_（アンダーライン）」「.（ドット）」に違いがありますので気をつけましょう。</p><br /><br /><p>each.with_indexメソッドの使い方を紹介します。</h3><br /><h3 class=""uk-heading-bullet"">サンプル</p><br /><pre><code>seasons = [""Spring"", ""Summer"", ""Autumn"", ""Winter""]<br />seasons.each.with_index(1) do |season, i|<br />  puts ""#{i} = #{season}""<br />end<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">実行結果</h3><br /><pre><code>1 = Spring<br />2 = Summer<br />3 = Autumn<br />4 = Winter<br /></code></pre><br /><br /><p>この方法を使うことで初期値を0以外に変更することが出来ます。each_with_index(1)で引数を渡すとエラーになりますので気をつけましょう。</p><br />",false
2,2,3,4,"AWS, Nginx, Rails, Pumaで「502 Bad Gateway」の対応方法","AWS, Nginx, Rails, Pumaを連携したときに「502 Bad Gateway」の画面が表示された。この対応方法についてNginxの設定を修正することにより解消することが出来ました。","<p>nginxのログを確認すると以下の内容が出力されていた。</p><br /><br /><pre><code>2020/01/18 07:39:19 [crit] 17617#0: *82 connect() to unix:/home/xxx/xxx/tmp/sockets/puma.sock failed (13: Permission denied) while connecting to upstream, <br />client: xxx.xx.xx.xx, server: xxxxxx.xxx, request: \""GET / HTTP/1.1\"", upstream: \""http://unix:/home/xxx/xxx/tmp/sockets/puma.sock:/500.html\"", host: \""xxxxxxx.xxx\""</code></pre><br /><br /><p>ブラウザの画面も「502 Bad Gateway」と表示されている。どうやらnginxとPumaが上手く繋がっていないようでした。</p><br /><p>nginxとPumaの実行しているユーザが異なっているため今回のエラーが出ていることが分かりました。nginx.confの設定のuserの部分をPumaを実行しているユーザに合わせることによってエラーが解消されました。</p><br /><br /><h3 class=""uk-heading-bullet"">/etc/nginx/nginx.conf （今回のユーザは""ec-user""とする）</h3><br /><pre><code># For more information on configuration, see:<br />#   * Official English Documentation: http://nginx.org/en/docs/<br />#   * Official Russian Documentation: http://nginx.org/ru/docs/<br /><br />#user nginx;<br />user ec-user;<br />worker_processes auto;<br />error_log /var/log/nginx/error.log;<br />pid /var/run/nginx.pid;<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">$ ps ux</h3><br /><pre><code>USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND<br />ec-user  5928  2.7  9.3 959188 93920 pts/1    Sl+  06:43   0:01 puma 4.3.1 (unix:///home/xxx/xxx/tmp/sockets/puma.sock) [xxx]                                     <br />ec-user  5966  0.0  0.2 117244  2188 pts/0    R+   06:43   0:00 ps ux<br />ec-user 23024  0.0  0.3  59788  3976 ?        S    04:10   0:00 nginx: worker process   <br /></code></pre><br /><br /><p>設定を変更したことにより「502 Bad Gateway」の画面が表示されなくなり、Railsのアプリケーションも無事に繋がりました。</p>",false
3,2,3,6,Nginx+Rails+Puma+AWSで「13: Permission Denied)」で画像が読み込めなかったときの対応方法,RailsのアプリケーションをNginxとPumaを使ってアプリは動かすことが出来たが、画像のみが表示されなかった。/var/lib/nginx のアクセス権限を変更しなければいけなかったようです。,"<p>nginxのログを確認すると以下の内容が出力されていた。</p><br /><br /><pre><code>2020/01/18 08:45:24 [crit] 19454#0: *63 open() ""/var/lib/nginx/tmp/proxy/5/00/0000000005"" failed (13: Permission denied) while reading upstream, <br />client: xxx.xx.xx.xxx, server: xxxxxx.xxx, request: ""GET /image/show_image/5 HTTP/1.1"", upstream: ""http://unix:/home/xxx/xxx/tmp/sockets/puma.sock:/image/show_image/5"", host: ""xxxxxx.xxx"", referrer: ""http://xxxxxx.xxx/""</code></pre><br /><br /><p>JSやCSSなどは読み込めていたが、画像のみだけが上手く表示出来なかった。</p><br /><p>RailsとPumaを動かすために nginx.conf ファイルのuserを変更して nginx の実行ユーザを変えたが、/var/lib/nginxのアクセス権限が変わっていなかったようです。それにより、キャッシュへアクセスが出来なかったのが原因だったようです。</p><br /><br /> <p>/var/lib/nginxのアクセス権限をnginx.conf ファイルで設定したuserと同じユーザに変更したことにより、今回の問題は解決しました。無事に画像も表示することが出来ました。</p><br /><br />",false
4,1,2,7,【Rails 6】favicon を設定する方法,favicon_link_tag メソッドを使うと簡単に favicon を設定することが出来ます。faviconを簡単に作成できるサイトや置き場所、設定方法を教えます。,"<h3 class=""uk-heading-bullet"">環境</h3><br /><pre><code>$ ruby -v<br />ruby 2.7.0p0 (2019-12-25 revision 647ee6f091) [x86_64-linux]<br /><br />$ rails -v<br />Rails 6.0.2.1<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">favicon.icoの用意</h3><br /><p>以下のサイトでfavicon.icoのファイルを簡単に作ることが出来ます。Faviconジェネレーターは、ブラウザ上で、JPEG, PNG, GIF などの画像ファイルから favicon 用の画像(favicon.ico)を生成・変換するサービスです。まずは、faviconにしたい画像を用意しましょう。</p><br /><p><a href=""https://favicon-generator.mintsu-dev.com/"" target=""_blank"">Favicon ジェネレーター</a></p><br /><br /><p>画像が作る方が苦手な方は以下のサイトを利用してはどうでしょうか。商用利用可能なアイコン素材をフリー(無料)ダウンロードできる素材配布サイトです。あなたのサイトに合ったアイコンを見つけることが出来るかもしれません。</p><br /><p><a href=""https://icooon-mono.com/"" target=""_blank"">ICOOON MONO</a></p><br /><br /><h3 class=""uk-heading-bullet"">favicon.icoの設置</h3><br /><p>favicon_link_tag メソッドを使うことで、favicon を指定することが出来ます。favicon.icoの置き場所 は app/assets/images 以下に置きましょう。</p><br /><br /><p>app/views/layouts/application.html.erbに以下のコードを設置する。</p><br /><pre><code>&lt;%= favicon_link_tag '/favicon.ico' %&gt;<br /># => &lt;link rel=""shortcut icon"" type=""image/x-icon"" href=""/assets/favicon.ico"" /&gt;<br /></code></pre><br /><br /><p>以上です。favicon_link_tagを使うとfaviconを簡単に設置出来ます。</p><br /><br />",false
5,3,4,2,Webサイトで英語がはみ出る場合の対処方法・折返し方法について,Webサイトで英字がはみ出ているのを気づいたことありませんか？スマホ画面で英字がはみ出ているサイトを見かけます。これは、CSSのword-breakとword-wrapを使うと対応出来ます。,"<p>半角英数が連続した文字を表示すると、指定した枠からはみ出ることがあります。例えば、リンクテキストの長いURLやハッシュ値などがあります。</p><br /><p>この問題は、CSSで対応することが出来ます。word-break: break-all;とword-wrap: break-word;（overflow-wrapに改名された）のどちらかを使うことによって英語を折り返すことが出来ます。</p><br /><br /><h3 class=""uk-heading-bullet"">例：word-break</h3><br /><pre><code>body{<br />  word-break: break-all;<br />}<br /></code></pre><br /><p>word-break: break-all;は、英語の単語の途中であっても折り返します。必ず右端で文字を折返してくれます。右端で ""ok"" のような短い単語の途中であっても、""o""と""k""で折り返します。英単語によっては違和感のある文章になる可能性があります。デザイン中心で考えたい場合はこちらを使うのがおすすめです。</p><br /><br /><h3 class=""uk-heading-bullet"">例：word-wrap（overflow-wrap）</h3><br /><pre><code>body{<br />  word-wrap: break-word;<br />  overflow-wrap: break-word;<br />}<br /></code></pre><br /><p>word-wrap: break-word;は、英語の単語の途中で折り返さないようにします。指定した枠内に収まれば、単語の途中では折り返さないようになります。必ず右端ぴったりで改行してくれるわけではありませんので、少しの隙間が出来る可能性があります。文体を意識したいときはこちらを使うのがおすすめです。</p><br /><p>overflow-wrapも入れといてあります。CSS3の最新の仕様案ではword-warpを改め、overflow-wrapとして提案されているそうです。</p><br /><br /><p>つまり、二つの違いは、英語の単語を途中で切るか切らないかの違いです。用途に合わせて使い分けましょう。</p><br /><br /><br />",false
6,1,2,8,【Rails 6】Ubuntu で rails webpacker:install でエラーが表示されたときの対応方法,Ubuntuでrails webpacker:install したときに実行されなかったときの対応方法を記します。大抵がYarnがインストールされていなかったり、バージョンが低いときにエラーが発生します。,"<h3 class=""uk-heading-bullet"">環境</h3><br /><pre><code>$ ruby -v<br />ruby 2.6.5p114 (2019-10-01 revision 67812) [x86_64-linux]<br /><br />$ rails -v<br />Rails 6.0.2.1<br /></code></pre><br /><br /><p>Webpacker configuration file not found でエラーが出た場合は以下のコマンドを実行して下さい。</p><br /><pre><code>$ rails webpacker:install</code></pre><br /><br /><h3 class=""uk-heading-bullet"">rails webpacker:install 実行後、以下のエラーが出た場合</h3><br /><p>yarnがインストールされていない場合は、以下のエラーが表示される。</p><br /><pre><code>Yarn not installed. Please download and install Yarn from https://yarnpkg.com/lang/en/docs/install/<br /></code></pre><br /><p>yarnのバージョンが低い場合は、以下のエラーが表示される。</p><br /><pre><code>Webpacker requires Yarn >= 1.0.0 and you are using 0.32<br />Please upgrade Yarn https://yarnpkg.com/lang/en/docs/install/<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">yarnの最新版をインストールする</h3><br /><pre><code>$ curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -<br />$ echo ""deb https://dl.yarnpkg.com/debian/ stable main"" | sudo tee /etc/apt/sources.list.d/yarn.list<br />$ sudo apt update<br />$ sudo apt -y install yarn<br />$ sudo apt -y install --no-install-recommends yarn<br />$ yarn --version<br />1.21.1<br /></code></pre><br /><br /><p>再度、rails webpacker:install を実行すれば成功すると思います。</p><br /><br /><br />",false
7,1,2,1,【Rails 6】AWS で rake assets:precompile でエラーが出たときの対応方法,AWSでrake assets:precompileしたときに実行されなかった。Yarn requires Node.js 4.0 or higher to be installed. のようなエラーが出たときの対処方法を書いてみました。,"<h3 class=""uk-heading-bullet"">環境</h3><br /><pre><code>$ ruby -v<br />ruby 2.6.5p114 (2019-10-01 revision 67812) [x86_64-linux]<br /><br />$ rails -v<br />Rails 6.0.2.1<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">rake assets:precompile 実行後、以下のエラーが出た場合</h3><br /><pre><code>Yarn requires Node.js 4.0 or higher to be installed.</code></pre><br /><br /><p>上記のエラーが出た場合、node と yarn をインストールしましょう。今回は最新バージョンをインストール出来る方法を紹介します。</p><br /><br /><h3 class=""uk-heading-bullet"">nvmをインストールします。</h3><br /><pre><code>$ git clone git://github.com/creationix/nvm.git .nvm<br />$ . .nvm/nvm.sh<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">nodeをインストールします。</h3><br /><pre><code>$ nvm install --lts<br />$ nvm use --lts<br />$ node -v<br />v12.14.1<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">.bash_profile に以下の内容を追加します。</h3><br /><pre><code>$ vi ~/.bash_profile<br /># nvm<br />if [[ -s ~/.nvm/nvm.sh ]];<br />  then source ~/.nvm/nvm.sh<br />fi<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">yarn をインストールします。</h3><br /><pre><code>$ curl -o- -L https://yarnpkg.com/install.sh | bash<br />$ source ~/.bashrc<br />$ yarn -v<br />1.21.1<br />$ yarn install --check-files<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">rake assets:precompileを実行しましょう。</h3><br /><pre><code>$ rake assets:precompile<br /></code></pre><br /><br /><p>以上です。</p><br />",false
8,1,1,9,【Ruby 2.7】日付や日時のデータを文字列に変更する方法,strftimeメソッドを使うと現在時刻や時刻を任意に指定したフォーマットで文字列に変換することが出来ます。色々な設定方法があるので紹介します。,"<h3 class=""uk-heading-bullet"">環境</h3><br /><pre><code>$ ruby -v<br />ruby 2.7.0p0 (2019-12-25 revision 647ee6f091) [x86_64-linux]<br /></code></pre><br /><br /><p>基本的によく使用するものを紹介します。</p><br /><table class=""uk-table uk-table-divider""><br />  <tr><br />    <th>Format</th><br />    <th>Output</th> <br />  </tr><br />  <tr><br />    <td>%Y</td><br />    <td>西暦を表す数字(2020)</td><br />  </tr><br />  <tr><br />    <td>%m</td><br />    <td>月を表す数字(01-12)</td><br />  </tr><br />  <tr><br />    <td>%d</td><br />    <td>日を表す数字(01-31)</td><br />  </tr><br />  <tr><br />    <td>%H</td><br />    <td>時間を表す数字(00-23)</td><br />  </tr><br />  <tr><br />    <td>%M</td><br />    <td>分を表す数字(00-59)</td><br />  </tr><br />  <tr><br />    <td>%S</td><br />    <td>秒を表す数字(00-60)</td><br />  </tr><br />  <tr><br />    <td>%A</td><br />    <td>曜日の名称を表す(Sunday, Monday ... )</td><br />  </tr><br /></table><br /><br /><h3 class=""uk-heading-bullet"">サンプル</h3><br /><pre><code>time = Time.now<br />=> 2020-01-25 23:35:23 -0500<br />time.strftime(""%Y"")<br />=> ""2020""<br />time.strftime(""%Y/%m/%d"")<br />=> ""2020/01/25""<br />time.strftime(""%Y/%m/%d %H:%M:%S"")<br />=> ""2020/01/25 23:35:23""<br />time.strftime(""%Y/%m/%d %A"")<br />=> ""2020/01/25 Saturday""<br /></code></pre><br /><br /><p>特に任意で文字列を設定したくない方は以下をおすすめします。</p><br /><table class=""uk-table uk-table-divider""><br />  <tr><br />    <th>Format</th><br />    <th>Output</th> <br />  </tr><br />  <tr><br />    <td>%F</td><br />    <td>%Y-%m-%d で出力(2020-01-25)</td><br />  </tr><br />  <tr><br />    <td>%D</td><br />    <td>%m/%d/%y で出力(01/25/20)</td><br />  </tr><br />  <tr><br />    <td>%R</td><br />    <td>%H:%M で出力(23:35)</td><br />  </tr><br />  <tr><br />    <td>%T</td><br />    <td>%H:%M:%S で出力(23:35:23)</td><br />  </tr><br /></table><br /><br /><h3 class=""uk-heading-bullet"">サンプル</h3><br /><pre><code>time = Time.now<br />=> 2020-01-25 23:35:23 -0500<br />time.strftime(""%F"")<br />=> ""2020-01-25""<br />time.strftime(""%D"")<br />=> ""01/25/20""<br />time.strftime(""%R"")<br />=> ""23:35""<br />time.strftime(""%T"")<br />=> ""23:35:23""<br />time.strftime(""%F %T"")<br />=> ""2020-01-25 23:35:23""<br /></code></pre><br /><br /><p>まだまだフォーマットの種類は色々あります。今回はよく使うフォーマットを紹介しました。</p><br /><br /><br /><br /><br /><br /><br /><br />",false
9,4,5,10,モンコレの館【ロダール大陸】のモンスターの場所,ラストクラウディア のモンコレの館【ロダール大陸】のモンスターの場所をまとめてみました。１回目と２回目のモンスターの場所をまとめました。参考にどうぞ。,"<h3 class=""uk-heading-bullet"">1回目</h3><br /><p class=""uk-text-bold"">マルコロボス</p><br /><p>モリアナ台地（少女の成長）</p><br /><br /><p class=""uk-text-bold"">グライフグライフ</p><br /><p>モリアナ台地（英雄を思って）</p><br /><br /><p class=""uk-text-bold"">アズールミューラ	</p><br /><p>カルディナ遺跡（藪をつつく青年）</p><br /><br /><p class=""uk-text-bold"">DXR-RU006-S</p><br /><p>カルディナ遺跡（命の匂い）</p><br /><br /><p class=""uk-text-bold"">ディノアウロイド</p><br /><p>カルディナ遺跡（遺跡を後へ）</p><br /><br /><p class=""uk-text-bold"">ゴールドダボーン</p><br /><p>ゴルド鉱山（目当ての魔獣）</p><br /><br /><p class=""uk-text-bold"">ゴールドグラモス</p><br /><p>ゴルド鉱山（声を追って）</p><br /><br /><br /><h3 class=""uk-heading-bullet"">2回目</h3><br /><p class=""uk-text-bold"">ゴブル</p><br /><p>バダル大樹（海鳥と虫の鳴き声）</p><br /><br /><p class=""uk-text-bold"">ポグポグ</p><br /><p>バダル大樹海（希望の光）</p><br /><br /><p class=""uk-text-bold"">オータムポックル</p><br /><p>赤の海岸（遠くに見えるは城）</p><br /><br /><p class=""uk-text-bold"">サハギン</p><br /><p>赤の海岸（新たな選択肢）</p><br /><br /><p class=""uk-text-bold"">DXR-XXXV</p><br /><p>神聖ローダル城（分かれ道）</p><br /><br /><p class=""uk-text-bold"">怨念に囚われしもの</p><br /><p>幽霊船レグニス（伝わらぬ浪漫）</p><br /><br /><p class=""uk-text-bold"">暴走モルモット</p><br /><p>幽霊船レグニス（幽霊船とみんなの気持ち）</p><br />",false
10,1,2,11,【Rails 6】scaffoldの使い方と戻し方のコマンド方法,scaffoldの使い方を紹介します。間違えてscaffoldをしたときの戻し方も書きました。忘れがちなので記事に残したいと思います。,"<h3 class=""uk-heading-bullet"">環境</h3><br /><pre><code>$ ruby -v<br />ruby 2.7.0p0 (2019-12-25 revision 647ee6f091) [x86_64-linux]<br /><br />$ rails -v<br />Rails 6.0.2.1<br /></code></pre><br /><br /><p>まずは、scaffoldのコマンド方法を書きます。</p><br /><br /><h3 class=""uk-heading-bullet"">scaffoldの実行方法</h3><br /><pre><code>$ rails g scaffold [モデル名] [カラム名A:データの型A カラム名B:データの型B]<br /><br />$ rails g scaffold user name:string age:integer<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">scaffoldの戻す方法（キャンセル）</h3><br /><pre><code>$ rails d scaffold [モデル名]<br /><br />$ rails d scaffold user<br /></code></pre><br /><br /><p>それぞれのscaffoldのコマンドの実行結果を書きます。</p><br /><br /><h3 class=""uk-heading-bullet"">scaffoldの実行結果</h3><br /><pre><code>$ rails g scaffold user name:string age:integer<br />      invoke  active_record<br />      create    db/migrate/20200212023718_create_users.rb<br />      create    app/models/user.rb<br />      invoke    test_unit<br />      create      test/models/user_test.rb<br />      create      test/fixtures/users.yml<br />      invoke  resource_route<br />       route    resources :users<br />      invoke  scaffold_controller<br />      create    app/controllers/users_controller.rb<br />      invoke    erb<br />      create      app/views/users<br />      create      app/views/users/index.html.erb<br />      create      app/views/users/edit.html.erb<br />      create      app/views/users/show.html.erb<br />      create      app/views/users/new.html.erb<br />      create      app/views/users/_form.html.erb<br />      invoke    test_unit<br />      create      test/controllers/users_controller_test.rb<br />      create      test/system/users_test.rb<br />      invoke    helper<br />      create      app/helpers/users_helper.rb<br />      invoke      test_unit<br />      invoke    jbuilder<br />      create      app/views/users/index.json.jbuilder<br />      create      app/views/users/show.json.jbuilder<br />      create      app/views/users/_user.json.jbuilder<br />      invoke  assets<br />      invoke    scss<br />      create      app/assets/stylesheets/users.scss<br />      invoke  scss<br />      create    app/assets/stylesheets/scaffolds.scss<br /></code></pre><br /><br /><p class=""article_img""><img src=""/image/show_image/14"" alt=""scaffold sample""  uk-tooltip=""Scaffold Sample Screen"" /></p><br /><br /><h3 class=""uk-heading-bullet"">scaffoldの戻した結果</h3><br /><pre><code>$ rails d scaffold user<br />      invoke  active_record<br />      remove    db/migrate/20200212023718_create_users.rb<br />      remove    app/models/user.rb<br />      invoke    test_unit<br />      remove      test/models/user_test.rb<br />      remove      test/fixtures/users.yml<br />      invoke  resource_route<br />       route    resources :users<br />      invoke  scaffold_controller<br />      remove    app/controllers/users_controller.rb<br />      invoke    erb<br />      remove      app/views/users<br />      remove      app/views/users/index.html.erb<br />      remove      app/views/users/edit.html.erb<br />      remove      app/views/users/show.html.erb<br />      remove      app/views/users/new.html.erb<br />      remove      app/views/users/_form.html.erb<br />      invoke    test_unit<br />      remove      test/controllers/users_controller_test.rb<br />      remove      test/system/users_test.rb<br />      invoke    helper<br />      remove      app/helpers/users_helper.rb<br />      invoke      test_unit<br />      invoke    jbuilder<br />      remove      app/views/users<br />      remove      app/views/users/index.json.jbuilder<br />      remove      app/views/users/show.json.jbuilder<br />      remove      app/views/users/_user.json.jbuilder<br />      invoke  assets<br />      invoke    scss<br />      remove      app/assets/sty<br /></code></pre><br /><br /><p>以上です。今回は、コマンドのみを書きました。</p>",false
11,1,1,3,【Ruby 2.7】配列の要素を追加する方法,Ruby 2.7 でも使える配列の要素を追加する方法をメモしておきます。先頭や末尾に追加する方法や任意の位置に要素を追加する方法をメモします。,"<h3 class=""uk-heading-bullet"">環境</h3><br /><pre><code>$ ruby -v<br />ruby 2.7.0p0 (2019-12-25 revision 647ee6f091) [x86_64-linux]<br /></code></pre><br /><br /><p>配列の末尾に要素を追加する方法を紹介します。</p><br /><br /><h3 class=""uk-heading-bullet"">pushメソッド</h3><br /><pre><code>games = [""FF"", ""DQ"", ""pokemon""]<br />games.push(""Mario"")<br />=> [""FF"", ""DQ"", ""pokemon"", ""Mario""]<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet""><< 演算子</h3><br /><pre><code>games = [""FF"", ""DQ"", ""pokemon""]<br />games << ""Mario""<br />=> [""FF"", ""DQ"", ""pokemon"", ""Mario""]<br /></code></pre><br /><br /><p>配列の先頭に要素を追加する方法です。</p><br /><br /><h3 class=""uk-heading-bullet"">unshiftメソッド</h3><br /><pre><code>games = [""FF"", ""DQ"", ""pokemon""]<br />games.unshift(""Mario"")<br />=> [""Mario"", ""FF"", ""DQ"", ""pokemon""]<br /></code></pre><br /><br /><p>配列の要素を任意の位置に追加する方法です。第一引数に追加する位置。第二引数に追加する要素を指定します。</p><br /><br /><h3 class=""uk-heading-bullet"">insertメソッド</h3><br /><pre><code>games = [""FF"", ""DQ"", ""pokemon""]<br />games.insert(2, ""Mario"")<br />=> [""FF"", ""DQ"", ""Mario"", ""pokemon""]<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">おまけ （複数指定の方法）</h3><br /><pre><code>games = [""FF"", ""DQ"", ""pokemon""]<br />games.push(""Mario"", ""Zelda"")<br />=> [""FF"", ""DQ"", ""pokemon"", ""Mario"", ""Zelda""]<br /><br />games = [""FF"", ""DQ"", ""pokemon""]<br />games.unshift(""Mario"", ""Zelda"")<br />=> [""Mario"", ""Zelda"", ""FF"", ""DQ"", ""pokemon""]<br /><br />games = [""FF"", ""DQ"", ""pokemon""]<br />games.insert(2, ""Mario"", ""Zelda"")<br />=> [""FF"", ""DQ"", ""Mario"", ""Zelda"", ""pokemon""]<br /></code></pre><br /><br />",false
12,4,5,13,アークエーテルのおすすめ報酬,エーテリオンの使い道に困っていませんか？ラストクラウディア のおすすめアークエーテル報酬のアークを紹介します。初心者の方は必ず見て下さい。,"<h3 class=""uk-heading-bullet"">ラドムーンストーン</h3><br /><p class=""uk-text-bold"">ラドムーン賢封蹟</p><br /><p>魔法の詠唱速度を20%上昇させてくれるアクセサリーです。魔法キャラ必須のアイテムです。ラドムーン賢封蹟はRアークなのでガチャでも出やすいです。エーテリオンはあまり使わなくても大丈夫です。</p><br /><br /><h3 class=""uk-heading-bullet"">狂信者のペンダント</h3><br /><p class=""uk-text-bold"">邪教神殿</p><br /><p>魔法の詠唱速度を30%上昇させてくれるアクセサリーです。これも魔法キャラ必須のアイテムです。「ラドムーンストーン」「狂信者のペンダント」とスキルの「高位魔法詠唱陣」を組み合わせれば全ての魔法が無詠唱で使用できます。邪教神殿はSRアークのためエーテリオンを使っていいと思います。</p><br /><br /><h3 class=""uk-heading-bullet"">天哭杖レムロード</h3><br /><p class=""uk-text-bold"">神獣ログ・メキア</p><br /><p>天哭杖レムロードは杖です。魔法キャラでは最強の杖といえます。攻撃魔法のクリティカル発生時の威力を30%上げる特徴とMP+50、STR+102、INT+216の効果があります。神獣ログ・メキアはSSRアークのためガチャでは出にくいですが、このアークを入手したら優先的にエーテリオンを使っていきましょう。</p><br /><br /><h3 class=""uk-heading-bullet"">秘装銃トリシュラ</h3><br /><p class=""uk-text-bold"">栄光のカルディナ</p><br /><p>秘装銃トリシュラは、機械の武器です。特技攻撃がモンスターの属性耐性を無視してダメージを与えることが出来ます。特技攻撃に属性が付いているセイリオスやヴァンなどにおすすめの武器です。セイリオスの場合、相手が氷属性の耐性が100％の場合でもダメージが与えることが出来ます。幻英の塔のモンスターは、属性耐性が高く設定させているのでこの武器があるだけで攻略の難易度が下がります。属性キャラがいる場合は、エーテリオンを使っていきましょう。</p><br /><br /><h3 class=""uk-heading-bullet"">マジャの杖</h3><br /><p class=""uk-text-bold"">マジャ大神殿</p><br /><p>マジャの杖は光属性魔法のダメージを30%上昇する杖です。ギャラクシーとシャイニングゾークの威力を上昇できます。さらに、マジャ大神殿では光ハイブーストとオートオーラも覚えられるので、アークエーテルを100％にすれば覚えられるスピードも上がるのでおすすめです。SSRアークのためガチャでは出にくいですが、このアークを入手したら優先的にエーテリオンを使っていきましょう。</p>",false
13,1,1,1,【Ruby 2.7】Excelファイルを読み込む方法,RubyでExcelファイルを読み込む方法を紹介します。roo というgemを使って、xlsとxlsxのファイルを読み込む方法を解説します。,"<h3 class=""uk-heading-bullet"">環境</h3><br /><pre><code>$ ruby -v<br />ruby 2.7.0p0 (2019-12-25 revision 647ee6f091) [x86_64-linux]<br /></code></pre><br /><br /><p>roo というgemを使って、xlsとxlsxのファイルを読み込む方法を解説します。</p><br /><br /><h3 class=""uk-heading-bullet"">rooのインストール</h3><br /><pre><code>gem install roo<br />gem install roo-xls<br /></code></pre><br /><br /><p>rooはxlsxを読み込むときに使い、roo-xlsはxlsのファイルを読み込める。とりあえず、両方インストールしましょう。</p><br /><br /><p>Rails の場合は、Gemfileに設定しましょう。</p><br /><pre><code>gem 'roo'<br />gem 'roo-xls'<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">Excelファイルの読み込み方</h3><br /><p>xlsxファイルとxlsファイルで読み込み方が違うので気を付けましょう。</p><br /><p>xlsxファイルの場合</p><br /><pre><code>require 'roo'<br /><br />xlsx = Roo::Excelx.new('sample_file.xlsx')<br /></code></pre><br /><br /><p>xlsファイルの場合</p><br /><pre><code>require 'roo-xls'<br /><br />xls = Roo::Excel.new('sample_file.xls')<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">セルの取得方法</h3><br /><p>セルを取得する場合は、cell(行, 列)で値を取得します。</p><br /><pre><code>xlsx = Roo::Excelx.new('sample_file.xlsx')<br /># A1 を取得する場合<br />xlsx.cell(1,1)<br /># B3 を取得する場合<br />xlsx.cell(2,3)<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">最後の行、列番号の取得する方法</h3><br /><pre><code>xlsx = Roo::Excelx.new('sample_file.xlsx')<br /># 最後の行番号を取得<br />xlsx.last_row<br /><br /># 最後の列番号を取得<br />xlsx.last_column<br /></code></pre><br /><br /><h3 class=""uk-heading-bullet"">ループで取得する方法</h3><br /><p></p><br /><pre><code>xlsx = Roo::Excelx.new('sample_file.xlsx')<br />1.upto(xlsx.last_row) do |row|<br />  # 2列目を1行ずつ取得する<br />  xlsx.cell(row, 2)<br />end<br /></code></pre><br /><br /><p>今回はrooの基本的な使い方を紹介しました。そのほかに結合したセルの取得や他の形式に変換できる機能などがあります。それはまた次回書きたいと思います。</p><br /><br />",false
